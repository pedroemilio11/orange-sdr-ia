version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: orange-sdr-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - orange-network

  postgres:
    image: postgres:15-alpine
    container_name: orange-sdr-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-orange_sdr}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-orange123}
      POSTGRES_DB: ${POSTGRES_DATABASE:-orange_sdr_ia}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - orange-network

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: orange-sdr-app
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      REDIS_HOST: redis
      POSTGRES_HOST: postgres
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - redis
      - postgres
    volumes:
      - ./src:/app/src
      - ./config:/app/config
    restart: unless-stopped
    networks:
      - orange-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  grafana:
    image: grafana/grafana:latest
    container_name: orange-sdr-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_INSTALL_PLUGINS: redis-datasource
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    restart: unless-stopped
    networks:
      - orange-network

  prometheus:
    image: prom/prometheus:latest
    container_name: orange-sdr-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - orange-network

volumes:
  redis-data:
  postgres-data:
  grafana-data:
  prometheus-data:

networks:
  orange-network:
    driver: bridge